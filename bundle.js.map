{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/bubble.js","webpack:///./lib/canvas.js","webpack:///./lib/character.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/timer.js","webpack:///./lib/wire.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wB;;;;;;;;;;;AClEA,iBAAiB,mBAAO,CAAC,uCAAa;AACtC,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;;AAEA;;AAEA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA,2B;;;;;;;;;;;ACnDA,eAAe,mBAAO,CAAC,iCAAU;AACjC,kBAAkB,mBAAO,CAAC,uCAAa;AACvC,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,cAAc,mBAAO,CAAC,+BAAS;;AAE/B,iB;AACA,yBAAyB,0DAA0D;AACnF,yBAAyB,0EAA0E;AACnG,yBAAyB,yEAAyE;AAClG,yBAAyB,0EAA0E;AACnG,wBAAwB;AACxB;;AAEA,iBAAiB;;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,c;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,4BAA4B;AAClF;;AAEA,sDAAsD,oCAAoC;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,qC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0B;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/canvas.js\");\n","\n\n\nclass Bubble {\n    constructor(options) {\n        this.posX = options.x;\n        this.posY = options.y;\n        this.radius = options.radius;\n        this.color = options.color;\n        this.startingVy = options.startVy;\n        this.defaultVy = options.vy;\n        this.vx = options.vx || 1.5;\n        this.vy = options.vy;\n        this.bounceFactor = 1;\n        this.gravity = options.gravity || 0.12;\n        this.count = 0\n    }\n\n    draw(ctx){\n        ctx.beginPath();\n        ctx.arc(this.posX, this.posY, this.radius, 0, 2 * Math.PI, true);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.closePath();\n        this.update();\n    }\n\n    update(){\n    \n        if (this.count === 0 && this.startingVy){\n        //    debugger;\n            this.posY += this.startingVy\n            this.startingVy += this.gravity\n        } else {\n            // debugger;\n            this.posY += this.vy;\n            this.vy += this.gravity;\n        }\n    \n        // this.vy ? this.posY += this.vy : ;\n        // this.vy ? this.vy += this.gravity : ;\n        this.posX += this.vx;\n        // this.posY += this.vy\n        if (this.posY >= 600-this.radius){\n            this.count = 1;\n            // debugger;\n            this.vy = this.defaultVy*(-1);\n            // debugger;\n            // this.vy = -8.5;\n        }\n        if (this.posX <= 100+this.radius){\n            this.vx = 1.5;\n        }\n        if (this.posX >= 1000-this.radius){\n            this.vx = -1.5;\n        }\n        if (this.posY <= 100){\n            this.vy = this.defaultVy;\n        }\n    }\n\n    //if it gets hit by the wire it splits into two new ones, going opposite directions\n\n    //needs a function to see if there is a colision with the character\n}\n\nmodule.exports = Bubble;","const GameView = require('./game_view');\nconst Game = require('./game');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    const canvasEl = document.getElementById(\"canvas\");\n\n    const ctx = canvasEl.getContext('2d');\n\n    const game = new Game();\n    new GameView(game, ctx).start();\n\n})\n\n","\nclass Character {\n    constructor(options){\n        this.posX = options.x;\n        this.posY = options.y;\n        this.width = 30;\n        this.speed = 2.4;\n        this.left = false;\n        this.right = false;\n    }\n\n    draw(ctx){\n        if (this.left) this.posX -= this.speed;\n        if (this.right) this.posX += this.speed;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(this.posX, this.posY, this.width, 50);\n    }\n\n    isCollidedWith(obj){\n        const rad = obj.radius - 3;\n        const bcx = obj.posX;\n        const bcy = obj.posY;\n        const rx = this.posX;\n        const ry = this.posY;\n        const lx = this.posX + this.width;\n        const ly = this.posY;\n\n        //checks for colission with the top of the player\n        if ((obj.posY + obj.radius) >= this.posY && obj.posX >= this.posX && obj.posX <= this.posX + this.width){\n       \n             }\n        //checks for collision with the right of the player\n        if (obj.posX + obj.radius >= this.posX && obj.posX + obj.radius <= this.posX + this.width && obj.posY >= this.posY) {\n    \n        }\n        //checks for collision with the left of the player\n        if (obj.posX - obj.radius >= this.posX && obj.posX - obj.radius <= this.posX + this.width && obj.posY >= this.posY) {\n     \n        }\n        // console.log(Math.sqrt((bcx - rx) ** 2 + (bcy - ry) ** 2), rad);\n        if ((Math.sqrt((bcx - rx) ** 2 + (bcy - ry) ** 2) <= rad) || (Math.sqrt((bcx - lx) ** 2 + (bcy - ly) ** 2) <= rad)){\n            // debugger;\n        }\n    }\n\n\n}\n\n\n// const NORMAL_FRAME_TIME_DELTA = 700/60;\n\nmodule.exports = Character;","const Bubble = require('./bubble');\nconst Character = require('./character');\nconst Wire = require('./wire');\nconst Timer = require('./timer');\n\nconst BUBBLES = { \n                    70: { color: \"red\", radius: 70, vx: 1.5, vy: 8.5, gravity: .12},\n                    40: { color: \"orange\", radius: 40, vx: 1.5, vy: 7.8, gravity: .12, startVy: -4},\n                    20: { color: \"green\", radius: 20, vx: 1.5, vy: 6.8, gravity: .12, startVy: -4},\n                    10: { color: \"blue\", radius: 10, vx: 1.5, vy: 5.4, gravity: .12, startVy: -5.5},\n                    5: { color: \"yellow\", radius: 5, vx: 1.5, vy: 4, gravity: .12, startVy: -6.3}\n};\n\nconst DEFAULT = { x: 400, y: 300, color: \"red\", radius: 70, vy: 8.5 };\n\n\nclass Game{\n    constructor(){\n        this.bubbles = [];\n        this.character = [];\n        this.wire = [];\n        this.addBubbles();\n        this.timer = [];\n        this.startTimer();\n    }\n\n    startTimer(){\n        this.timer.push(new Timer);\n    }\n    \n    addBubbles(options = DEFAULT){\n        this.bubbles.push(new Bubble(options))\n    }\n    \n    addCharacter(){\n        let options = {x: 550, y: 550}\n        this.character.push(new Character(options));\n    }\n    \n    addWire(){\n        if (this.wire.length === 0){\n            let pos = [this.character[0].posX+15, this.character[0].posY+50];\n            this.wire.push(new Wire(pos))\n        }\n    }\n    \n    allObjects(){\n        return [].concat(this.bubbles, this.character, this.wire, this.timer);\n    }\n    \n    draw(ctx){ \n        ctx.clearRect(0,0,1300,700);\n        ctx.fillStyle = \"lightblue\";\n        ctx.fillRect(100, 100, 900, 500);\n        this.allObjects().forEach(object => {\n            console.log(object);\n            object.draw(ctx)\n        })\n\n    }\n    \n    checkCollisions(){\n        this.wire.forEach( wire => {\n            if (wire.endPos[1] <= 100){\n                this.wire = [];\n            }\n        })\n        this.bubbles.forEach( bubble => {\n            this.character[0].isCollidedWith(bubble);\n            \n            if (this.wire.length != 0 && this.wire[0].isCollidedWith(bubble)){\n                this.wire = [];\n                this.hitBubble(bubble);\n            }\n        })\n        \n    }\n    \n    hitBubble(bubble){\n        let bubbleIdx = this.bubbles.indexOf(bubble);\n        const posX = bubble.posX;\n        const posY = bubble.posY;\n        const newVx = bubble.vx;\n   \n        if (bubble.radius === 70){\n            let newBub1 = Object.assign(BUBBLES[40], {x: posX, y: posY, vx: newVx})\n            this.addBubbles(newBub1);\n\n            let newBub2 = Object.assign(BUBBLES[40], { x: posX, y: posY, vx: newVx * (-1)})\n            this.addBubbles(newBub2);\n        }\n        else if (bubble.radius != 5) {\n            let id = bubble.radius / 2;\n            let newBub1 = Object.assign(BUBBLES[id], {\n                x: posX,\n                y: posY,\n                vx: newVx\n            });\n            this.addBubbles(newBub1);\n\n            let newBub2 = Object.assign(BUBBLES[id], {\n                x: posX,\n                y: posY,\n                vx: newVx * -1\n            });\n            this.addBubbles(newBub2); \n        }\n\n        this.bubbles.splice(bubbleIdx,1)\n    }\n    \n    step(){\n        this.checkCollisions();\n    }\n    \n}\n\nmodule.exports = Game;\n\n","\n\n\nclass GameView {\n    constructor(game, ctx){\n        this.game = game;\n        this.ctx = ctx;\n        this.game.addCharacter();\n        // this.game.startTimer();\n        this.character = this.game.character[0];\n        this.wire = this.game.wire[0];\n    }\n\n    \n    move(down, e) {\n        switch (e.keyCode) {\n            case 37:\n                this.character.left = down;\n                break;\n            case 39:\n                this.character.right = down\n                break;\n            case 32:\n                this.game.addWire();\n                break;\n        }\n    }\n    \n    start(){\n        addEventListener(\"keydown\", this.move.bind(this, true), false);\n        addEventListener(\"keyup\", this.move.bind(this, false), false);\n        \n        this.lastTime = 0;\n        requestAnimationFrame(this.animate.bind(this));\n    }\n\n    animate(time) {\n     this.timeDelta = time - this.lastTime;\n     \n     this.game.step();\n     this.game.draw(this.ctx);\n     this.lastTime = time;\n\n     requestAnimationFrame(this.animate.bind(this))\n    }\n}\n\nmodule.exports = GameView;","\nclass Timer {\n    constructor(){\n        this.timer = 0\n        this.on = true;\n    }\n\n    draw(ctx){\n        if (this.timer >= 1) {\n            this.on = false;\n        }\n        if (this.on){\n            // debugger;\n            this.timer += .0005\n        }\n        ctx.fillStyle = \"red\";\n        ctx.fillRect(1050, 600, 50, 0-(500*this.timer));\n    }\n\n    timeOut(){\n        if (this.timer >= 1){\n            this.on = false;\n            return true\n        }\n        return false\n    }\n}\n\nmodule.exports = Timer;","\nclass Wire {\n    constructor(pos){\n        this.startPos = pos;\n        this.endPos = [this.startPos[0], this.startPos[1] - 50];\n        this.vy = -4\n    }\n\n\n\n    draw(ctx){\n        // debugger;\n        ctx.beginPath();\n        ctx.moveTo(this.startPos[0], this.startPos[1]);\n        ctx.lineTo(this.endPos[0], this.endPos[1])\n        ctx.stroke();\n        this.update();\n    }\n\n    update(){\n        this.endPos[1] += this.vy\n    }\n\n    isCollidedWith(bubble){\n        const bcx = bubble.posX;\n        const bcy = bubble.posY;\n        const wex = this.endPos[0];\n        const wey = this.endPos[1];\n        const rad = bubble.radius\n       \n       \n        if (Math.sqrt((bcx - wex)**2 + (bcy - wey)**2) <= rad){\n            return true;\n        }\n        if (bcy + rad - 5 > wey && wex >= bcx - rad && wex <= bcx + rad) {\n            return true;\n        }\n    }\n}\n\nmodule.exports = Wire;\n\n"],"sourceRoot":""}