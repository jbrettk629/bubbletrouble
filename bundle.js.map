{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/bubble.js","webpack:///./lib/canvas.js","webpack:///./lib/character.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/wire.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wB;;;;;;;;;;;ACpDA,iBAAiB,mBAAO,CAAC,uCAAa;AACtC,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;ACjBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;;AAEA,2B;;;;;;;;;;;ACzDA,eAAe,mBAAO,CAAC,iCAAU;AACjC,kBAAkB,mBAAO,CAAC,uCAAa;AACvC,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B,iB;AACA,yBAAyB,2BAA2B;AACpD,yBAAyB,4BAA4B;AACrD,yBAAyB,2BAA2B;AACpD,yBAAyB,0BAA0B;AACnD,wBAAwB;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,c;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/canvas.js\");\n","\n\nconst DEFAULTS = {\n    RADIUS: 80,\n    COLOR: \"purple\",\n}\n\nclass Bubble {\n    constructor(options = DEFAULTS) {\n        this.posX = options.x;\n        this.posY = options.y;\n        this.radius = options.radius;\n        this.color = options.color;\n        this.vx = 1.5;\n        this.vy = options.vy || 8.5;\n        this.bounceFactor = 1;\n        this.gravity = 0.12;\n    }\n\n    draw(ctx){\n        ctx.beginPath();\n        ctx.arc(this.posX, this.posY, this.radius, 0, 2 * Math.PI, true);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.closePath();\n        this.update();\n    }\n\n    update(){\n      \n        this.posX += this.vx;\n        this.posY += this.vy;\n        this.vy += this.gravity;\n        if (this.posY >= 530){\n            this.vy = -8.5;\n        }\n        if (this.posX <= 170){\n            this.vx = 1.5;\n        }\n        if (this.posX >= 930){\n            this.vx = -1.5;\n        }\n        if (this.posY <= 100){\n            this.vy = 8.5;\n        }\n    }\n\n    //if it gets hit by the wire it splits into two new ones, going opposite directions\n\n    //needs a function to see if there is a colision with the character\n}\n\nmodule.exports = Bubble;","const GameView = require('./game_view');\nconst Game = require('./game');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    const canvasEl = document.getElementById(\"canvas\");\n\n    const ctx = canvasEl.getContext('2d');\n    \n\n    // ctx.beginPath();\n    // ctx.arc(100, 100, 20, 0, 2 * Math.PI, true);\n    // ctx.fillStyle = \"blue\";\n    // ctx.fill();\n\n    const game = new Game();\n    new GameView(game, ctx).start();\n\n})\n\n","\nclass Character {\n    constructor(options){\n        this.posX = options.x;\n        this.posY = options.y;\n        this.width = 30\n        this.speed = 3;\n        this.left = false;\n        this.right = false;\n    }\n\n    draw(ctx){\n        if (this.left) this.posX -= this.speed;\n        if (this.right) this.posX += this.speed;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(this.posX, this.posY, 30, 50);\n    }\n\n\n\n    // move(dir, delta){\n    //     // console.log(delta)\n    //     const velocityScale = delta / NORMAL_FRAME_TIME_DELTA;\n    //     // console.log(velocityScale);\n    //     const offsetX = this.vx * velocityScale;\n    //     // console.log(offsetX);\n        \n    //     if (dir === \"left\"){\n    //         this.posX += ((this.vx + offsetX)*(-1));\n    //     }\n     \n    //     if (dir === \"right\"){\n    //         this.posX += (this.vx + offsetX);\n    //     }\n    // }\n\n    isCollidedWith(obj){\n        //checks for colission with the top of the player\n        if ((obj.posY + obj.radius) >= this.posY && obj.posX >= this.posX && obj.posX <= this.posX + this.width){\n       \n             }\n        //checks for collision with the right of the player\n        if (obj.posX + obj.radius >= this.posX && obj.posX + obj.radius <= this.posX + this.width && obj.posY >= this.posY) {\n        \n        }\n        //checks for collision with the left of the player\n        if (obj.posX - obj.radius >= this.posX && obj.posX - obj.radius <= this.posX + this.width && obj.posY >= this.posY) {\n      \n        }\n    }\n\n\n}\n\n\nconst NORMAL_FRAME_TIME_DELTA = 700/60;\n\nmodule.exports = Character;","const Bubble = require('./bubble');\nconst Character = require('./character');\nconst Wire = require('./wire');\n\nconst BUBBLES = { \n                    70: { color: \"red\", radius: 70 },\n                    40: {color: \"orange\", radius: 40},\n                    20: {color: \"green\", radius: 20},\n                    10: {color: \"blue\", radius: 10},\n                    5: { color: \"yellow\", radius: 5}\n}\n\nclass Game{\n    constructor(){\n        this.bubbles = [];\n        this.character = [];\n        this.wire = [];\n        this.addBubbles();\n    }\n\n    addBubbles(){\n        let options = {x: 400, y: 300, color: \"red\", radius: 70}\n        this.bubbles.push(new Bubble(options))\n    }\n\n    addCharacter(){\n        let options = {x: 550, y: 550}\n        this.character.push(new Character(options));\n    }\n\n    addWire(){\n        debugger\n        if (this.wire.length === 0){\n            let pos = [this.character[0].posX+15, this.character[0].posY+50];\n            this.wire.push(new Wire(pos))\n        }\n        // debugger;\n    }\n\n    allObjects(){\n        return [].concat(this.bubbles, this.character, this.wire);\n    }\n\n    draw(ctx){  \n        ctx.clearRect(0,0,1300,700);\n        ctx.fillStyle = \"lightblue\";\n        ctx.fillRect(100, 100, 900, 500);\n        this.allObjects().forEach(object => object.draw(ctx))\n    }\n\n    checkCollisions(){\n        this.bubbles.forEach( bubble => {\n            this.character[0].isCollidedWith(bubble);\n            if (this.wire.length != 0 && this.wire[0].isCollidedWith(bubble)){\n                this.wire = [];\n           \n            }\n        })\n        \n    }\n\n    hitBubble(bubble){\n        bubbleIdx = this.bubbles.indexOf(bubble)\n        if (bubble.radius === 70){\n            // let newBub1 = merge(BUBBLES.35, )\n\n        }\n        else if (bubble.radius != 5) {\n            let newBub1 = new Bubble\n\n        }\n        this.bubbles.splice(bubbleIdx)\n    }\n\n    step(){\n        this.checkCollisions();\n    }\n\n}\n\nmodule.exports = Game;\n\n","\n\n\nclass GameView {\n    constructor(game, ctx){\n        this.game = game;\n        this.ctx = ctx;\n        this.game.addCharacter();\n        this.character = this.game.character[0];\n        this.wire = this.game.wire[0];\n    }\n\n    \n    move(down, e) {\n        // debugger;\n        switch (e.keyCode) {\n            case 37:\n                // debugger;\n                this.character.left = down;\n                // this.character.move(\"left\", this.timeDelta);\n                break;\n            case 39:\n            // debugger;\n                this.character.right = down\n                // this.character.move(\"right\", this.timeDelta);\n                break;\n            case 32:\n                // debugger;w\n                this.game.addWire();\n                break;\n        }\n    }\n    \n    start(){\n        addEventListener(\"keydown\", this.move.bind(this, true), false);\n        addEventListener(\"keyup\", this.move.bind(this, false), false);\n    \n        // this.game.draw(this.ctx);\n        this.lastTime = 0;\n        //start aimation\n        requestAnimationFrame(this.animate.bind(this));\n    }\n\n    animate(time) {\n     this.timeDelta = time - this.lastTime;\n     \n     this.game.step();\n     this.game.draw(this.ctx);\n     this.lastTime = time;\n\n     //every call to animate requests causes another call to animate\n     requestAnimationFrame(this.animate.bind(this))\n    }\n}\n\nmodule.exports = GameView;","\nclass Wire {\n    constructor(pos){\n        this.startPos = pos;\n        this.endPos = [this.startPos[0], this.startPos[1] - 50];\n        this.vy = -3\n    }\n\n\n\n    draw(ctx){\n        // debugger;\n        ctx.beginPath();\n        ctx.moveTo(this.startPos[0], this.startPos[1]);\n        ctx.lineTo(this.endPos[0], this.endPos[1])\n        ctx.stroke();\n        this.update();\n    }\n\n    update(){\n        this.endPos[1] += this.vy\n    }\n    //needs to disappear\n        //when it hits the ceiling\n\n        //when it hits a balloon\n\n    isCollidedWith(bubble){\n        const bcx = bubble.posX;\n        const bcy = bubble.posY;\n        const wex = this.endPos[0];\n        const wey = this.endPos[1];\n        // if this.startPos[0]\n        if (this.endPos[1] <= 100){\n            // this.remove();\n            return true;\n        }\n        if (Math.sqrt((bcx - wex)**2 + (bcy - wey)**2) <= bubble.radius){\n            return true;\n        }\n\n        if (bcy + bubble.radius - 5 > wey && wex >= bcx - bubble.radius && wex <= bcx + bubble.radius){\n            return true;\n        }\n\n    }\n\n    // remove(){\n    //     this.startPos = [0,0];\n    //     this.endPos = [0,0];\n    // }\n}\n\nmodule.exports = Wire;\n\n"],"sourceRoot":""}