{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/bubble.js","webpack:///./lib/canvas.js","webpack:///./lib/character.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/timer.js","webpack:///./lib/wire.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;AC7DA;AACA,iBAAiB,mBAAO,CAAC,uCAAa;AACtC,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;;AAEA;;AAEA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;;ACZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,WAAW;AACnC;;;AAGA;;;;;AAKA,2B;;;;;;;;;;;ACtFA,eAAe,mBAAO,CAAC,iCAAU;AACjC,kBAAkB,mBAAO,CAAC,uCAAa;AACvC,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,cAAc,mBAAO,CAAC,+BAAS;;AAE/B,iB;AACA,iBAAiB,iFAAiF;AAClG,iBAAiB,iGAAiG;AAClH,iBAAiB,kGAAkG;AACnH,iBAAiB,mGAAmG;AACpH,gBAAgB;AAChB;;AAEA,iBAAiB;;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D,eAAe;AAC3E;AACA;AACA,4DAA4D,iBAAiB;AAC7E,4DAA4D,iBAAiB;AAC7E;AACA;AACA,4DAA4D,2BAA2B;AACvF,4DAA4D,iBAAiB;AAC7E;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,4B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD,4BAA4B;AAClF;;AAEA,sDAAsD,oCAAoC;AAC1F;;AAEA,SAAS;AACT;AACA,sDAAsD,8BAA8B;AACpF;;AAEA,sDAAsD,kCAAkC;AACxF,qC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,YAAY;;;AAGpC;;;AAGA;;AAEA;;;;;;;;;;;;;;;;AChQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,gBAAgB;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/canvas.js\");\n","\n\n\nclass Bubble {\n    constructor(options) {\n        this.posX = options.x;\n        this.posY = options.y;\n        this.radius = options.radius;\n        this.color = options.color;\n        this.startingVy = options.startVy;\n        this.defaultVy = options.vy;\n        this.vx = options.vx || 1.5;\n        this.vy = options.vy;\n        this.bounceFactor = 1;\n        this.gravity = options.gravity || 0.12;\n        this.count = 0\n        this.points = options.points;\n        this.bonus = options.bonus\n    }\n\n    draw(ctx){\n        // let glareCenter = (this.radius/Math.sqrt(2))-3;\n        // var grd = ctx.createRadialGradient(this.posX - glareCenter, this.posY - glareCenter, 0.1, this.posX - glareCenter, this.posY - glareCenter, this.radius * 0.55);\n        // grd.addColorStop(0, \"lightred\");\n        // grd.addColorStop(1, this.color);\n        ctx.beginPath();\n        ctx.arc(this.posX, this.posY, this.radius, 0, 2 * Math.PI, true);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.closePath();\n        this.update();\n    }\n\n    update(){\n    \n        if (this.count === 0 && this.startingVy){\n            this.posY += this.startingVy\n            this.startingVy += this.gravity\n        } else {\n            this.posY += this.vy;\n            this.vy += this.gravity;\n        }\n    \n        this.posX += this.vx;\n\n        if (this.posY >= 500-this.radius){\n            this.count = 1;\n            this.vy = this.defaultVy*(-1);\n        }\n        if (this.posX <= 5+this.radius){\n            this.vx = 1.5;\n        }\n        if (this.posX >= 800-this.radius){\n            this.vx = -1.5;\n        }\n        if (this.posY <= 100){\n            this.vy = this.defaultVy;\n        }\n    }\n}\n\nmodule.exports = Bubble;","// import '../app/styles/game.css';\nconst GameView = require('./game_view');\nconst Game = require('./game');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n\n    const canvasEl = document.getElementById(\"canvas\");\n\n    const ctx = canvasEl.getContext('2d');\n\n    const game = new Game();\n    new GameView(game, ctx).load();\n\n})\n\n","\nclass Character {\n    constructor(options){\n        this.posX = options.x;\n        this.posY = options.y;\n        this.width = 30;\n        this.speed = 2.4;\n        this.left = false;\n        this.right = false;\n        this.lives = 5;\n    }\n\n    draw(ctx){\n        if (this.left && this.posX >= 0+this.speed) this.posX -= this.speed;\n        if (this.right && this.posX+this.width <= 800-this.speed) this.posX += this.speed;\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(this.posX, this.posY, this.width, 50);\n        this.displayLives(ctx);\n    }\n\n    isCollidedWith(obj){\n        const rad = obj.radius - 3;\n        const bcx = obj.posX;\n        const bcy = obj.posY;\n        const rx = this.posX;\n        const ry = this.posY;\n        const lx = this.posX + this.width;\n        const ly = this.posY;\n\n        //checks for colission with the top of the player\n        if ((bcy + rad) >= ry && bcx >= rx && bcx <= lx){\n            // this.loseLife();\n            return true;\n             }\n        //checks for collision with the right of the player\n        if (bcx + rad >= rx && bcx + rad <= lx && bcy >= ry) {\n            // this.loseLife();\n            return true;\n        }\n        //checks for collision with the left of the player\n        if (bcx - rad >= rx && bcx - rad <= lx && bcy >= ly) {\n            // this.loseLife();\n            return true;\n        }\n        // checks for collision with the corners of the playerc\n        if ((Math.sqrt((bcx - rx) ** 2 + (bcy - ry) ** 2) <= rad) || (Math.sqrt((bcx - lx) ** 2 + (bcy - ly) ** 2) <= rad)){\n            // this.loseLife();\n            return true;\n        }\n    }\n\n    loseLife(){\n        this.lives -= 1;\n    }\n\n    displayLives(ctx){\n\n        ctx.fillStyle = \"lightgrey\"\n        ctx.fillRect(0, 515, 80, 50);\n        ctx.fillStyle = \"grey\"\n        ctx.fillRect(3, 518, 74, 44);\n        ctx.fillStyle = \"white\"\n        ctx.fillRect(5, 520, 70, 40);\n\n        ctx.font = \"bold 25px Comic Sans MS\";\n        ctx.fillStyle = \"red\";\n        ctx.fillText('Lives', 10, 550)\n\n        ctx.fillStyle = \"lightgrey\";\n        ctx.fillRect(100, 515, 60, 50);\n        ctx.fillStyle = \"grey\";\n        ctx.fillRect(103, 518, 54, 44);\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(105, 520, 50, 40);\n\n        ctx.font = \"25px Comic Sans MS\";\n        ctx.fillStyle = \"grey\";\n        ctx.fillText(`${this.lives}`, 120, 550);\n    }\n\n\n}\n\n\n\n\nmodule.exports = Character;","const Bubble = require('./bubble');\nconst Character = require('./character');\nconst Wire = require('./wire');\nconst Timer = require('./timer');\n\nconst BUBBLES = { \n            70: { color: \"red\", radius: 70, vx: 1.5, vy: 8.5, gravity: .12, points: 10, bonus: 0 },\n            40: { color: \"orange\", radius: 40, vx: 1.5, vy: 7.8, gravity: .12, startVy: -4, points: 15, bonus: 0 },\n            20: { color: \"green\", radius: 20, vx: 1.5, vy: 6.8, gravity: .12, startVy: -4, points: 20, bonus: 200 },\n            10: { color: \"blue\", radius: 10, vx: 1.5, vy: 5.4, gravity: .12, startVy: -5.5, points: 25, bonus: 100 },\n            5: { color: \"purple\", radius: 5, vx: 1.5, vy: 4, gravity: .12, startVy: -6.3, points: 30, bonus: 50 }\n};\n\nconst DEFAULT = { x: 200, y: 200, color: \"red\", radius: 70, vx: 1.5, vy: 8.5, gravity: .12, points: 10 }\n\n\nclass Game{\n    constructor(){\n        this.bubbles = [];\n        this.character = [];\n        this.wire = [];\n        this.setBubbles(1)\n        // this.addBubbles();\n        this.timer = [];\n        this.startTimer();\n        this.lives = 5;\n        this.points = 0;\n        this.gameWon = false;\n        this.over = false;\n        this.level = 1;\n        this.loadingLevel = false;\n        this.levelWon = false;\n        this.hit = false;\n    }\n\n    startTimer(){\n        this.timer.push(new Timer);\n    }\n\n    setBubbles(level){\n        debugger;\n        switch(level){\n            case 1:\n                this.addBubbles(Object.assign(BUBBLES[20], {x: 200, y: 200}));\n                break;\n            case 2:\n                this.addBubbles(Object.assign(BUBBLES[20], { x: 200, y: 200 }));\n                this.addBubbles(Object.assign(BUBBLES[20], { x: 600, y: 200 }));\n                break;\n            case 3:\n                this.addBubbles(Object.assign(BUBBLES[40], { x: 200, y: 200, vx: -1.5 }));\n                this.addBubbles(Object.assign(BUBBLES[40], { x: 600, y: 200 }));\n                break;\n        }\n    }\n    \n    addBubbles(options = DEFAULT){\n        this.bubbles.push(new Bubble(options))\n    }\n    \n    addCharacter(){\n        let options = {x: 350, y: 450}\n        this.character.push(new Character(options));\n    }\n    \n    addWire(){\n        if (this.wire.length === 0){\n            let pos = [this.character[0].posX+15, this.character[0].posY+50];\n            this.wire.push(new Wire(pos))\n        }\n    }\n    \n    allObjects(){\n        return [].concat(this.bubbles, this.character, this.wire, this.timer);\n    }\n    \n    draw(ctx){\n        ctx.clearRect(0,0,1000,600);\n        this.drawborder(ctx);\n        this.drawBackground(ctx);\n        this.drawCeiling(ctx);\n        this.allObjects().forEach(object => {\n            object.draw(ctx)\n        })\n        this.displayPoints(ctx);\n        this.gameOverModal(ctx);\n    }\n    \n    drawborder(ctx){\n        ctx.fillStyle = \"lightgrey\";\n        ctx.fillRect(0, 0, 805, 505);\n    }\n\n    drawBackground(ctx){\n        let grd = ctx.createLinearGradient(5, 5, 795, 495);\n        grd.addColorStop(0, '#ceefff');\n        grd.addColorStop(1, '#52bcff');\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(5, 5, 795, 495);\n    }\n\n    drawCeiling(ctx){\n        let i = 0;\n        while (i <= 800){\n            ctx.beginPath();\n            ctx.moveTo(i,0);\n            ctx.lineTo(i+6,0);\n            ctx.lineTo(i+3,10)\n            ctx.fillStyle = \"grey\"\n            ctx.fill();\n            i += 6;\n        }\n    }\n    \n    gameOver(){\n        this.stopAnimation();\n        if (this.character[0].lives > 0 && this.hit){\n            debugger;\n            setTimeout(() => this.restartLevel(), 1000);\n            this.character[0].lives -= 1;\n        } else if (this.levelWon) {\n            debugger;\n            this.nextLevel();\n            this.levelWon = false;\n        } else {\n            this.over = true\n        }\n    }\n\n    step(){\n        this.checkBubbles(); \n        this.checkCollisions();\n        this.checkTimer();\n \n    }\n        \n    checkBubbles(){\n        if (this.bubbles.length === 0){\n            if (this.levelWon === false){\n                this.addLevel();\n                this.levelWon = true;\n            }\n            // this.gameWon = true;\n            this.addTimePoints();\n        }\n    }\n    \n    checkTimer(){\n        if (this.timer[0].outOfTime()){\n            this.gameOver();\n        }\n    }\n\n    addLevel(){\n        this.level += 1;\n    }\n        \n    checkCollisions(){\n        this.wire.forEach( wire => {\n            if (wire.endPos[1] <= 0){\n                this.wire = [];\n            }\n        })\n        this.bubbles.forEach( bubble => {\n            if (bubble.posY-bubble.radius <= 5){\n                let points = bubble.bonus    \n                this.addPoints(points);\n                this.removeBubble(bubble);\n            }\n             if (this.character[0].isCollidedWith(bubble)){\n                 this.hit = true;\n                 this.gameOver();\n                 this.hit = false;\n            }\n            if (this.wire.length != 0 && this.wire[0].isCollidedWith(bubble)){\n                this.wire = [];\n                this.hitBubble(bubble);\n            }\n        })\n    }\n\n    removeBubble(bubble){\n        let bubbleIdx = this.bubbles.indexOf(bubble);\n        this.bubbles.splice(bubbleIdx,1)\n     }\n\n     addPoints(points){\n         this.points += points;\n     }\n    \n    hitBubble(bubble){\n\n        this.addPoints(bubble.points);\n\n        const posX = bubble.posX;\n        const posY = bubble.posY;\n        const newVx = bubble.vx;\n   \n        if (bubble.radius === 70){\n            let newBub1 = Object.assign(BUBBLES[40], {x: posX, y: posY, vx: newVx})\n            this.addBubbles(newBub1);\n\n            let newBub2 = Object.assign(BUBBLES[40], { x: posX, y: posY, vx: newVx * (-1)})\n            this.addBubbles(newBub2);\n\n        } else if (bubble.radius != 5) {\n            let id = bubble.radius / 2;\n            let newBub1 = Object.assign(BUBBLES[id], { x: posX, y: posY, vx: newVx });\n            this.addBubbles(newBub1);\n\n            let newBub2 = Object.assign(BUBBLES[id], {x: posX, y: posY, vx: newVx * -1 });\n            this.addBubbles(newBub2); \n        }\n        this.removeBubble(bubble);\n    }\n    \n\n    addTimePoints(){\n        if (this.timer[0].timer < 1){\n            this.points += 10;\n            this.timer[0].timer += .001;\n        } else {\n            debugger;\n            this.stopAnimation();\n            this.nextLevel();\n        }\n    }\n\n    displayPoints(ctx){\n\n        ctx.fillStyle = \"lightgrey\"\n        ctx.fillRect(240, 515, 90, 50);\n        ctx.fillStyle = \"grey\"\n        ctx.fillRect(243, 518, 84, 44);\n        ctx.fillStyle = \"white\"\n        ctx.fillRect(245, 520, 80, 40);\n\n        ctx.font = \"bold 25px Comic Sans MS\";\n        ctx.fillStyle = \"red\";\n        ctx.fillText ('Points', 250, 550)\n\n        ctx.fillStyle = \"lightgrey\"\n        ctx.fillRect(350, 515, 90, 50);\n        ctx.fillStyle = \"grey\"\n        ctx.fillRect(353, 518, 84, 44);\n        ctx.fillStyle = \"white\"\n        ctx.fillRect(355, 520, 80, 40);\n\n        ctx.font = \"25px Comic Sans MS\";\n        ctx.fillStyle = \"grey\";\n        ctx.fillText(`${this.points}`, 375, 550)\n\n\n    }\n\n    \n}\n\nmodule.exports = Game;\n\n","\n\n\nclass GameView {\n    constructor(game, ctx){\n        this.game = game;\n        this.ctx = ctx;\n        this.game.addCharacter();\n        this.character = this.game.character[0];\n        this.wire = this.game.wire[0];\n        this.game.stopAnimation = this.stopAnimation.bind(this);\n        this.game.restartLevel = this.restartLevel.bind(this);\n        this.game.nextLevel = this.nextLevel.bind(this);\n        this.game.gameOverModal = this.gameOverModal.bind(this);\n    }\n\n    \n    move(down, e) {\n        switch (e.keyCode) {\n            case 37:\n                this.character.left = down;\n                break;\n            case 39:\n                this.character.right = down\n                break;\n            case 32:\n                this.game.addWire();\n                break;\n        }\n    }\n\n    gameOverModal(ctx){\n        if (this.game.over || this.game.gameWon){\n            ctx.fillStyle = \"lightgrey\";\n            ctx.fillRect(245, 145, 310, 210);\n            ctx.fillStyle = \"grey\";\n            ctx.fillRect(248, 148, 304, 204);\n            ctx.fillStyle = \"white\";\n            ctx.fillRect(250, 150, 300, 200);\n\n            ctx.font = \"bold 40px Comic Sans MS\";\n            ctx.fillStyle = \"red\";\n            if (this.game.gameWon){\n                ctx.fillText(\"You Won!\", 300, 250)\n            } else {\n                ctx.fillText(\"Game Over\", 300, 250)\n            }\n        }\n    }\n\n    // replayButton(ctx){\n    //     ctx.fillStyle = \"grey\";\n    //     ctx.fillRect()\n    // }\n\n    // replay(){\n    //     this.game.lives = 5\n    //     this.continueAnimation();\n    // }\n    \n    load(){\n        addEventListener(\"keydown\", this.move.bind(this, true), false);\n        addEventListener(\"keyup\", this.move.bind(this, false), false);\n        \n        // this.lastTime = 0;\n        this.getReady(this.ctx);\n    }\n\n    getReady(ctx){\n        debugger;\n        this.game.draw(this.ctx);\n\n        \n        ctx.fillStyle = \"lightgrey\";\n        ctx.fillRect(250, 150, 300, 200);\n\n        ctx.font = \"30px Comic Sans MS\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(\"Get Ready\", 325, 250)\n        ctx.fillStyle = \"black\";\n        ctx.fillText(`Level ${this.game.level}`, 350, 300);\n        setTimeout(() => this.startAnimation(), 3500)\n    }\n    \n    startAnimation(){\n        requestAnimationFrame(this.animate.bind(this))\n    }\n\n    stopAnimation(){\n        cancelAnimationFrame(this.req);\n    }\n\n    restartLevel(){\n        debugger;\n        this.game.bubbles = [];\n        this.game.setBubbles(this.game.level);\n        // this.game.addBubbles();\n        this.character.posX = 350;\n        this.character.posY = 450;\n        this.game.timer = [];\n        this.game.startTimer();\n        this.game.points = 0;\n        this.game.wire = [];\n\n        // this.lastTime = performance.now();\n        this.getReady(this.ctx);\n    }\n\n    nextLevel(){\n        this.game.setBubbles(this.game.level);\n        this.character.posX = 350;\n        this.character.posY = 450;\n        this.game.timer = [];\n        this.game.startTimer();\n        this.getReady(this.ctx);\n    }\n\n    animate(time) {\n     this.req = requestAnimationFrame(this.animate.bind(this))\n     \n     this.game.step(this.ctx);\n     this.game.draw(this.ctx);\n    //  this.lastTime = time;\n\n    }\n}\n\nmodule.exports = GameView;","\nclass Timer {\n    constructor(){\n        this.timer = 0\n        this.on = true;\n    }\n\n    draw(ctx){\n        ctx.fillStyle = \"lightgrey\"\n        ctx.fillRect(830, 515, 90, 50);\n        ctx.fillStyle = \"grey\"\n        ctx.fillRect(833, 518, 84, 44);\n        ctx.fillStyle = \"white\"\n        ctx.fillRect(835,520, 80, 40);\n\n        ctx.font = \"bold 25px Comic Sans MS\";\n        ctx.fillStyle = \"black\";\n        ctx.fillText(\"Timer\", 840, 550)\n\n\n        ctx.fillStyle = \"lightgrey\";\n        ctx.fillRect(845,505,60,-505);\n\n        ctx.fillStyle = \"darkgrey\";\n        ctx.fillRect(850,500,50,-495);\n\n        if (this.timer >= 1) {\n            this.on = false;\n        }\n        if (this.on){\n            // debugger;\n            this.timer += .0003\n        }\n        ctx.fillStyle = \"red\";\n        ctx.fillRect(850, 500, 50, -495+(495*this.timer));\n    }\n\n    outOfTime(){\n        if (this.timer >= 1){\n            this.on = false;\n            return true\n        }\n        return false\n    }\n}\n\nmodule.exports = Timer;","\nclass Wire {\n    constructor(pos){\n        this.startPos = pos;\n        this.endPos = [this.startPos[0], this.startPos[1] - 50];\n        this.vy = -4.5\n    }\n\n\n\n    draw(ctx){\n        // debugger;\n        ctx.beginPath();\n        ctx.moveTo(this.startPos[0], this.startPos[1]);\n        ctx.lineTo(this.endPos[0], this.endPos[1])\n        ctx.stroke();\n        this.update();\n    }\n\n    update(){\n        this.endPos[1] += this.vy\n    }\n\n    isCollidedWith(bubble){\n        const bcx = bubble.posX;\n        const bcy = bubble.posY;\n        const wex = this.endPos[0];\n        const wey = this.endPos[1];\n        const rad = bubble.radius\n       \n       \n        if (Math.sqrt((bcx - wex)**2 + (bcy - wey)**2) <= rad){\n            return true;\n        }\n        if (bcy + rad - 5 > wey && wex >= bcx - rad && wex <= bcx + rad) {\n            return true;\n        }\n    }\n}\n\nmodule.exports = Wire;\n\n"],"sourceRoot":""}